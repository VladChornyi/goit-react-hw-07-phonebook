{"version":3,"sources":["components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","services/Api.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/contactsForm/ContactsForm.jsx","redux/phonebook/phonebook-operations.js","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","components/App.jsx","redux/phonebook/phonebookReducer.js","redux/store.js","index.js","components/contactsForm/ContactsForm.module.css"],"names":["module","exports","axios","defaults","baseURL","addContactApi","contactData","post","then","data","catch","err","deleteContactApi","contactId","delete","changeFilter","createAction","fetchGetContactsRequest","fetchGetContactsSuccess","fetchGetContactsError","fetchAddContactsRequest","fetchAddContactsSuccess","fetchAddContactsError","fetchDeleteContactsRequest","fetchDeleteContactsSuccess","fetchDeleteContactsError","getContactsSelector","state","phonebook","items","getFilterSelector","filter","getFilteredContactsSelector","createSelector","allContacts","normalizedFilter","toLowerCase","contact","name","includes","getFilteredContacts","ContactsForm","useState","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","onHandleChange","e","target","value","className","s","form","onSubmit","preventDefault","some","user","alert","a","title","type","pattern","required","onChange","addBtn","ContactsList","useEffect","get","error","onRemoveContact","id","length","map","delBtn","onClick","Filter","App","createReducer","_","payload","action","message","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc22e8c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2uZeh\",\"data\":\"Filter_data__HE-ZB\",\"title\":\"Filter_title__lqT3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delBtn\":\"ContactsList_delBtn__1RR8p\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040/';\r\n\r\nconst getContactsApi = () => {\r\n  return axios\r\n    .get('contacts')\r\n    .then(({ data }) => data)\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport { getContactsApi };\r\n\r\nconst addContactApi = contactData => {\r\n  return axios\r\n    .post(`contacts`, contactData)\r\n    .then(({ data }) => {\r\n      return data;\r\n    })\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { addContactApi };\r\n\r\nconst deleteContactApi = contactId => {\r\n  return axios\r\n    .delete(`contacts/${contactId}`)\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { deleteContactApi };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const deleteContact = createAction('phonebook/Delete');\r\n\r\nexport const changeFilter = createAction('phonebook/ChangeFilter');\r\n\r\nexport const fetchGetContactsRequest = createAction('phonebook/getContactsRequest');\r\nexport const fetchGetContactsSuccess = createAction('phonebook/getContactsSuccess');\r\nexport const fetchGetContactsError = createAction('phonebook/getContactsError');\r\n\r\nexport const fetchAddContactsRequest = createAction('phonebook/AddContactsRequest');\r\nexport const fetchAddContactsSuccess = createAction('phonebook/AddContactsSuccess');\r\nexport const fetchAddContactsError = createAction('phonebook/AddContactsError');\r\n\r\nexport const fetchDeleteContactsRequest = createAction('phonebook/DeleteContactsRequest');\r\nexport const fetchDeleteContactsSuccess = createAction('phonebook/DeleteContactsSuccess');\r\nexport const fetchDeleteContactsError = createAction('phonebook/DeleteContactsError');\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsSelector = state => state.phonebook.items;\r\nexport const getFilterSelector = state => state.phonebook.filter;\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n};\r\n\r\nexport const getFilteredContactsSelector = createSelector(\r\n  [getContactsSelector, getFilterSelector],\r\n  (allContacts, filter) => getFilteredContacts(allContacts, filter),\r\n);\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\n\r\nimport { getContactsSelector } from '../../redux/phonebook/phonebook-selectors';\r\nimport s from './ContactsForm.module.css';\r\n\r\nconst ContactsForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContactsSelector);\r\n\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    const searchRepeat = contacts.some(user => user.name.toLowerCase() === name.toLowerCase());\r\n    if (searchRepeat) {\r\n      alert(`${number.name} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact({ name, number }));\r\n    }\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onHandleSubmit}>\r\n      <label className={s.title}>\r\n        Name\r\n        <input\r\n          className={s.data}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n      <label className={s.title}>\r\n        Number\r\n        <input\r\n          className={s.data}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.addBtn} type=\"submit\">\r\n        add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactsForm;\r\n","import { addContactApi, deleteContactApi, getContactsApi } from '../../services/Api';\r\nimport {\r\n  fetchAddContactsError,\r\n  fetchAddContactsRequest,\r\n  fetchAddContactsSuccess,\r\n  fetchDeleteContactsError,\r\n  fetchDeleteContactsRequest,\r\n  fetchDeleteContactsSuccess,\r\n  fetchGetContactsError,\r\n  fetchGetContactsRequest,\r\n  fetchGetContactsSuccess,\r\n} from './phonebook-actions';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(fetchGetContactsRequest());\r\n\r\n  try {\r\n    const contacts = await getContactsApi();\r\n    dispatch(fetchGetContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(fetchGetContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = contactData => async dispatch => {\r\n  dispatch(fetchAddContactsRequest());\r\n\r\n  try {\r\n    const contact = await addContactApi(contactData);\r\n    dispatch(fetchAddContactsSuccess(contact));\r\n  } catch (error) {\r\n    dispatch(fetchAddContactsError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(fetchDeleteContactsRequest());\r\n\r\n  try {\r\n    await deleteContactApi(contactId);\r\n    dispatch(fetchDeleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(fetchDeleteContactsError(error));\r\n  }\r\n};\r\n","import s from './ContactsList.module.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContacts, deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { useEffect } from 'react';\r\nimport { getFilteredContactsSelector } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  const contacts = useSelector(getFilteredContactsSelector);\r\n\r\n  const onRemoveContact = id => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.length > 0 &&\r\n          contacts.map(contact => (\r\n            <li key={contact.id}>\r\n              {`${contact.name} : ${contact.number}`}\r\n              <button\r\n                className={s.delBtn}\r\n                type=\"button\"\r\n                name=\"delete\"\r\n                onClick={() => onRemoveContact(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import s from './Filter.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilterSelector } from '../../redux/phonebook/phonebook-selectors';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const onChangeFilter = e => dispatch(changeFilter(e.target.value));\r\n  const value = useSelector(getFilterSelector);\r\n  return (\r\n    <>\r\n      <label className={s.title}>\r\n        Find contacts by name\r\n        <input className={s.data} type=\"text\" value={value} onChange={onChangeFilter} />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactsForm from './contactsForm/ContactsForm';\nimport ContactsList from './contactsList/ContactsList';\nimport Filter from './filter/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactsForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  changeFilter,\r\n  fetchGetContactsSuccess,\r\n  fetchAddContactsSuccess,\r\n  fetchDeleteContactsSuccess,\r\n  fetchGetContactsError,\r\n  fetchAddContactsError,\r\n  fetchDeleteContactsError,\r\n  fetchGetContactsRequest,\r\n  fetchAddContactsRequest,\r\n  fetchDeleteContactsRequest,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchGetContactsSuccess]: (_, { payload }) => payload,\r\n  [fetchAddContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [fetchDeleteContactsSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchGetContactsError]: (_, action) => action.message,\r\n  [fetchGetContactsRequest]: () => null,\r\n  [fetchAddContactsError]: (_, action) => action.message,\r\n  [fetchAddContactsRequest]: () => null,\r\n  [fetchDeleteContactsError]: (_, action) => action.message,\r\n  [fetchDeleteContactsRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from './phonebook/phonebookReducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__NRyoz\",\"addBtn\":\"ContactsForm_addBtn__f1oZX\",\"data\":\"ContactsForm_data__1OaZV\",\"title\":\"ContactsForm_title__3WNr-\"};"],"sourceRoot":""}